
fib:     file format elf32-i386


Disassembly of section .init:

08048314 <_init>:
 8048314:	53                   	push   %ebx
 8048315:	83 ec 08             	sub    $0x8,%esp
 8048318:	e8 00 00 00 00       	call   804831d <_init+0x9>
 804831d:	5b                   	pop    %ebx
 804831e:	81 c3 d7 1c 00 00    	add    $0x1cd7,%ebx
 8048324:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 804832a:	85 c0                	test   %eax,%eax
 804832c:	74 05                	je     8048333 <_init+0x1f>
 804832e:	e8 4d 00 00 00       	call   8048380 <__gmon_start__@plt>
 8048333:	e8 08 01 00 00       	call   8048440 <frame_dummy>
 8048338:	e8 43 02 00 00       	call   8048580 <__do_global_ctors_aux>
 804833d:	83 c4 08             	add    $0x8,%esp
 8048340:	5b                   	pop    %ebx
 8048341:	c3                   	ret    

Disassembly of section .plt:

08048350 <printf@plt-0x10>:
 8048350:	ff 35 f8 9f 04 08    	pushl  0x8049ff8
 8048356:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 804835c:	00 00                	add    %al,(%eax)
	...

08048360 <printf@plt>:
 8048360:	ff 25 00 a0 04 08    	jmp    *0x804a000
 8048366:	68 00 00 00 00       	push   $0x0
 804836b:	e9 e0 ff ff ff       	jmp    8048350 <_init+0x3c>

08048370 <puts@plt>:
 8048370:	ff 25 04 a0 04 08    	jmp    *0x804a004
 8048376:	68 08 00 00 00       	push   $0x8
 804837b:	e9 d0 ff ff ff       	jmp    8048350 <_init+0x3c>

08048380 <__gmon_start__@plt>:
 8048380:	ff 25 08 a0 04 08    	jmp    *0x804a008
 8048386:	68 10 00 00 00       	push   $0x10
 804838b:	e9 c0 ff ff ff       	jmp    8048350 <_init+0x3c>

08048390 <__libc_start_main@plt>:
 8048390:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048396:	68 18 00 00 00       	push   $0x18
 804839b:	e9 b0 ff ff ff       	jmp    8048350 <_init+0x3c>

080483a0 <__isoc99_scanf@plt>:
 80483a0:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80483a6:	68 20 00 00 00       	push   $0x20
 80483ab:	e9 a0 ff ff ff       	jmp    8048350 <_init+0x3c>

Disassembly of section .text:

080483b0 <_start>:
 80483b0:	31 ed                	xor    %ebp,%ebp
 80483b2:	5e                   	pop    %esi
 80483b3:	89 e1                	mov    %esp,%ecx
 80483b5:	83 e4 f0             	and    $0xfffffff0,%esp
 80483b8:	50                   	push   %eax
 80483b9:	54                   	push   %esp
 80483ba:	52                   	push   %edx
 80483bb:	68 70 85 04 08       	push   $0x8048570
 80483c0:	68 00 85 04 08       	push   $0x8048500
 80483c5:	51                   	push   %ecx
 80483c6:	56                   	push   %esi
 80483c7:	68 9e 84 04 08       	push   $0x804849e
 80483cc:	e8 bf ff ff ff       	call   8048390 <__libc_start_main@plt>
 80483d1:	f4                   	hlt    
 80483d2:	90                   	nop
 80483d3:	90                   	nop
 80483d4:	90                   	nop
 80483d5:	90                   	nop
 80483d6:	90                   	nop
 80483d7:	90                   	nop
 80483d8:	90                   	nop
 80483d9:	90                   	nop
 80483da:	90                   	nop
 80483db:	90                   	nop
 80483dc:	90                   	nop
 80483dd:	90                   	nop
 80483de:	90                   	nop
 80483df:	90                   	nop

080483e0 <__do_global_dtors_aux>:
 80483e0:	55                   	push   %ebp
 80483e1:	89 e5                	mov    %esp,%ebp
 80483e3:	53                   	push   %ebx
 80483e4:	83 ec 04             	sub    $0x4,%esp
 80483e7:	80 3d 1c a0 04 08 00 	cmpb   $0x0,0x804a01c
 80483ee:	75 3f                	jne    804842f <__do_global_dtors_aux+0x4f>
 80483f0:	a1 20 a0 04 08       	mov    0x804a020,%eax
 80483f5:	bb 20 9f 04 08       	mov    $0x8049f20,%ebx
 80483fa:	81 eb 1c 9f 04 08    	sub    $0x8049f1c,%ebx
 8048400:	c1 fb 02             	sar    $0x2,%ebx
 8048403:	83 eb 01             	sub    $0x1,%ebx
 8048406:	39 d8                	cmp    %ebx,%eax
 8048408:	73 1e                	jae    8048428 <__do_global_dtors_aux+0x48>
 804840a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048410:	83 c0 01             	add    $0x1,%eax
 8048413:	a3 20 a0 04 08       	mov    %eax,0x804a020
 8048418:	ff 14 85 1c 9f 04 08 	call   *0x8049f1c(,%eax,4)
 804841f:	a1 20 a0 04 08       	mov    0x804a020,%eax
 8048424:	39 d8                	cmp    %ebx,%eax
 8048426:	72 e8                	jb     8048410 <__do_global_dtors_aux+0x30>
 8048428:	c6 05 1c a0 04 08 01 	movb   $0x1,0x804a01c
 804842f:	83 c4 04             	add    $0x4,%esp
 8048432:	5b                   	pop    %ebx
 8048433:	5d                   	pop    %ebp
 8048434:	c3                   	ret    
 8048435:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048439:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048440 <frame_dummy>:
 8048440:	55                   	push   %ebp
 8048441:	89 e5                	mov    %esp,%ebp
 8048443:	83 ec 18             	sub    $0x18,%esp
 8048446:	a1 24 9f 04 08       	mov    0x8049f24,%eax
 804844b:	85 c0                	test   %eax,%eax
 804844d:	74 12                	je     8048461 <frame_dummy+0x21>
 804844f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048454:	85 c0                	test   %eax,%eax
 8048456:	74 09                	je     8048461 <frame_dummy+0x21>
 8048458:	c7 04 24 24 9f 04 08 	movl   $0x8049f24,(%esp)
 804845f:	ff d0                	call   *%eax
 8048461:	c9                   	leave  
 8048462:	c3                   	ret    
 8048463:	90                   	nop

08048464 <fib>:
 8048464:	55                   	push   %ebp
 8048465:	89 e5                	mov    %esp,%ebp
 8048467:	53                   	push   %ebx
 8048468:	83 ec 14             	sub    $0x14,%esp
 804846b:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
 804846f:	7f 07                	jg     8048478 <fib+0x14>
 8048471:	b8 01 00 00 00       	mov    $0x1,%eax
 8048476:	eb 20                	jmp    8048498 <fib+0x34>
 8048478:	8b 45 08             	mov    0x8(%ebp),%eax
 804847b:	83 e8 01             	sub    $0x1,%eax
 804847e:	89 04 24             	mov    %eax,(%esp)
 8048481:	e8 de ff ff ff       	call   8048464 <fib>
 8048486:	89 c3                	mov    %eax,%ebx
 8048488:	8b 45 08             	mov    0x8(%ebp),%eax
 804848b:	83 e8 02             	sub    $0x2,%eax
 804848e:	89 04 24             	mov    %eax,(%esp)
 8048491:	e8 ce ff ff ff       	call   8048464 <fib>
 8048496:	01 d8                	add    %ebx,%eax
 8048498:	83 c4 14             	add    $0x14,%esp
 804849b:	5b                   	pop    %ebx
 804849c:	5d                   	pop    %ebp
 804849d:	c3                   	ret    

0804849e <main>:
 804849e:	55                   	push   %ebp
 804849f:	89 e5                	mov    %esp,%ebp
 80484a1:	83 e4 f0             	and    $0xfffffff0,%esp
 80484a4:	83 ec 20             	sub    $0x20,%esp
 80484a7:	c7 04 24 d0 85 04 08 	movl   $0x80485d0,(%esp)
 80484ae:	e8 bd fe ff ff       	call   8048370 <puts@plt>
 80484b3:	b8 ea 85 04 08       	mov    $0x80485ea,%eax
 80484b8:	8d 54 24 18          	lea    0x18(%esp),%edx
 80484bc:	89 54 24 04          	mov    %edx,0x4(%esp)
 80484c0:	89 04 24             	mov    %eax,(%esp)
 80484c3:	e8 d8 fe ff ff       	call   80483a0 <__isoc99_scanf@plt>
 80484c8:	8b 44 24 18          	mov    0x18(%esp),%eax
 80484cc:	89 04 24             	mov    %eax,(%esp)
 80484cf:	e8 90 ff ff ff       	call   8048464 <fib>
 80484d4:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 80484d8:	8b 54 24 18          	mov    0x18(%esp),%edx
 80484dc:	b8 f0 85 04 08       	mov    $0x80485f0,%eax
 80484e1:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
 80484e5:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 80484e9:	89 54 24 04          	mov    %edx,0x4(%esp)
 80484ed:	89 04 24             	mov    %eax,(%esp)
 80484f0:	e8 6b fe ff ff       	call   8048360 <printf@plt>
 80484f5:	b8 00 00 00 00       	mov    $0x0,%eax
 80484fa:	c9                   	leave  
 80484fb:	c3                   	ret    
 80484fc:	90                   	nop
 80484fd:	90                   	nop
 80484fe:	90                   	nop
 80484ff:	90                   	nop

08048500 <__libc_csu_init>:
 8048500:	55                   	push   %ebp
 8048501:	57                   	push   %edi
 8048502:	56                   	push   %esi
 8048503:	53                   	push   %ebx
 8048504:	e8 69 00 00 00       	call   8048572 <__i686.get_pc_thunk.bx>
 8048509:	81 c3 eb 1a 00 00    	add    $0x1aeb,%ebx
 804850f:	83 ec 1c             	sub    $0x1c,%esp
 8048512:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048516:	8d bb 20 ff ff ff    	lea    -0xe0(%ebx),%edi
 804851c:	e8 f3 fd ff ff       	call   8048314 <_init>
 8048521:	8d 83 20 ff ff ff    	lea    -0xe0(%ebx),%eax
 8048527:	29 c7                	sub    %eax,%edi
 8048529:	c1 ff 02             	sar    $0x2,%edi
 804852c:	85 ff                	test   %edi,%edi
 804852e:	74 29                	je     8048559 <__libc_csu_init+0x59>
 8048530:	31 f6                	xor    %esi,%esi
 8048532:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048538:	8b 44 24 38          	mov    0x38(%esp),%eax
 804853c:	89 2c 24             	mov    %ebp,(%esp)
 804853f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048543:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048547:	89 44 24 04          	mov    %eax,0x4(%esp)
 804854b:	ff 94 b3 20 ff ff ff 	call   *-0xe0(%ebx,%esi,4)
 8048552:	83 c6 01             	add    $0x1,%esi
 8048555:	39 fe                	cmp    %edi,%esi
 8048557:	75 df                	jne    8048538 <__libc_csu_init+0x38>
 8048559:	83 c4 1c             	add    $0x1c,%esp
 804855c:	5b                   	pop    %ebx
 804855d:	5e                   	pop    %esi
 804855e:	5f                   	pop    %edi
 804855f:	5d                   	pop    %ebp
 8048560:	c3                   	ret    
 8048561:	eb 0d                	jmp    8048570 <__libc_csu_fini>
 8048563:	90                   	nop
 8048564:	90                   	nop
 8048565:	90                   	nop
 8048566:	90                   	nop
 8048567:	90                   	nop
 8048568:	90                   	nop
 8048569:	90                   	nop
 804856a:	90                   	nop
 804856b:	90                   	nop
 804856c:	90                   	nop
 804856d:	90                   	nop
 804856e:	90                   	nop
 804856f:	90                   	nop

08048570 <__libc_csu_fini>:
 8048570:	f3 c3                	repz ret 

08048572 <__i686.get_pc_thunk.bx>:
 8048572:	8b 1c 24             	mov    (%esp),%ebx
 8048575:	c3                   	ret    
 8048576:	90                   	nop
 8048577:	90                   	nop
 8048578:	90                   	nop
 8048579:	90                   	nop
 804857a:	90                   	nop
 804857b:	90                   	nop
 804857c:	90                   	nop
 804857d:	90                   	nop
 804857e:	90                   	nop
 804857f:	90                   	nop

08048580 <__do_global_ctors_aux>:
 8048580:	55                   	push   %ebp
 8048581:	89 e5                	mov    %esp,%ebp
 8048583:	53                   	push   %ebx
 8048584:	83 ec 04             	sub    $0x4,%esp
 8048587:	a1 14 9f 04 08       	mov    0x8049f14,%eax
 804858c:	83 f8 ff             	cmp    $0xffffffff,%eax
 804858f:	74 13                	je     80485a4 <__do_global_ctors_aux+0x24>
 8048591:	bb 14 9f 04 08       	mov    $0x8049f14,%ebx
 8048596:	66 90                	xchg   %ax,%ax
 8048598:	83 eb 04             	sub    $0x4,%ebx
 804859b:	ff d0                	call   *%eax
 804859d:	8b 03                	mov    (%ebx),%eax
 804859f:	83 f8 ff             	cmp    $0xffffffff,%eax
 80485a2:	75 f4                	jne    8048598 <__do_global_ctors_aux+0x18>
 80485a4:	83 c4 04             	add    $0x4,%esp
 80485a7:	5b                   	pop    %ebx
 80485a8:	5d                   	pop    %ebp
 80485a9:	c3                   	ret    
 80485aa:	90                   	nop
 80485ab:	90                   	nop

Disassembly of section .fini:

080485ac <_fini>:
 80485ac:	53                   	push   %ebx
 80485ad:	83 ec 08             	sub    $0x8,%esp
 80485b0:	e8 00 00 00 00       	call   80485b5 <_fini+0x9>
 80485b5:	5b                   	pop    %ebx
 80485b6:	81 c3 3f 1a 00 00    	add    $0x1a3f,%ebx
 80485bc:	e8 1f fe ff ff       	call   80483e0 <__do_global_dtors_aux>
 80485c1:	83 c4 08             	add    $0x8,%esp
 80485c4:	5b                   	pop    %ebx
 80485c5:	c3                   	ret    
